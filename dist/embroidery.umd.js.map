{"version":3,"file":"embroidery.umd.js","sources":["../lib/index.ts","../lib/utils.ts","../lib/controller.ts","../lib/partial.ts"],"sourcesContent":["import Controller from './controller'\nimport Partial from './partial'\nimport { domReady } from './utils'\n\nenum Data {\n  Controller = '[data-controller]',\n  Partial = '[data-partial]',\n}\n\nenum DataAttribute {\n  Controller = 'controller',\n  Partial = 'partial',\n}\n\ntype Callback = (el: Element) => void\n\ntype Cache = {\n  [DataAttribute.Controller]: Element[]\n  [DataAttribute.Partial]: Element[]\n}\n\nexport class Embroidery {\n  private cache: Cache = {\n    [DataAttribute.Controller]: [],\n    [DataAttribute.Partial]: [],\n  }\n\n  private context\n\n  static start() {\n    const app = new Embroidery()\n    app.start()\n    return app\n  }\n\n  constructor() {}\n\n  async start() {\n    await domReady()\n    console.info('Embroidery started.')\n\n    this.discover((el) => {\n      this.initialize(el)\n    }, Data.Controller)\n\n    this.discover((el) => {\n      this.initialize(el)\n    }, Data.Partial)\n\n    this.listenForNewUninitializedControllersAtRuntime((el) => {\n      this.initialize(el)\n    })\n  }\n\n  register(controller: Element) {\n    this.context = { ...this.context, ...controller }\n  }\n\n  discover(callback: Callback, type: Data) {\n    document\n      .querySelectorAll(type)\n      .forEach((controller: Element) => callback(controller))\n  }\n\n  updateCache(element, type) {\n    this.cache = { ...this.cache, [type]: [...this.cache[type], element] }\n  }\n\n  initialize(e: Element) {\n    const element = e as HTMLElement\n    if (element.dataset) {\n      try {\n        Object.keys(element.dataset).forEach((el) => {\n          switch (el) {\n            case DataAttribute.Controller:\n              this.updateCache(element, DataAttribute.Controller)\n              return new Controller(element, this.context)\n\n            case DataAttribute.Partial:\n              this.updateCache(element, DataAttribute.Partial)\n              return new Partial(element)\n\n            default:\n              throw new Error(\n                'Element is not a specified data type, like controller or partial. Did you forget to register it?'\n              )\n          }\n        })\n      } catch (error) {\n        setTimeout(() => {\n          throw error\n        }, 0)\n      }\n    } else {\n      console.error(\n        `An element ${element} was picked up but could not be initialized`\n      )\n    }\n  }\n\n  discoverUninitializedControllers(\n    callback: Callback,\n    parentElement: Element = null\n  ) {\n    return Array.from(\n      (parentElement || document).querySelectorAll(Data.Controller)\n    )\n      .filter((element) => !this.cache[Data.Controller]?.includes(element))\n      .map((element) => callback(element))\n  }\n\n  listenForNewUninitializedControllersAtRuntime(callback: Callback) {\n    return new MutationObserver((mutations) =>\n      mutations.map(({ addedNodes }) => {\n        if (addedNodes.length > 0) {\n          addedNodes.forEach((node) => {\n            // Ignore non-elements\n            if (node.nodeType !== 1) return\n            // Don't listen for changes that happen in discovered controllers\n            if (node?.parentElement?.closest(Data.Controller)) return\n\n            this.discoverUninitializedControllers((el: Element) => {\n              callback(el)\n            }, node.parentElement)\n          })\n        }\n      })\n    ).observe(document.querySelector('body'), {\n      childList: true,\n      attributes: true,\n      subtree: true,\n    })\n  }\n}\n","// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\nexport function domReady() {\n  return new Promise((resolve) => {\n    if (document.readyState == 'loading') {\n      document.addEventListener('DOMContentLoaded', resolve)\n    } else {\n      resolve()\n    }\n  })\n}\n\nexport const defaultEventNames = {\n  a: 'click',\n  button: 'click',\n  form: 'submit',\n  input: 'input',\n  select: 'change',\n  textarea: 'input',\n}\n","import { defaultEventNames } from './utils'\n\ntype Context = {\n  [key: string]: Function\n}\n\nexport default class Controller {\n  private dataAttr: string\n  private targetElements: NodeList\n  private actionElements: NodeList\n\n  private cache = {\n    'data-target': [],\n    'data-action': [],\n  }\n\n  private context: Context\n  private initCalled = false\n\n  constructor(element: Element, context: Context) {\n    this.context = context\n    this.dataAttr = element.getAttribute('data-controller')\n    this.targetElements = element.querySelectorAll('[data-target]')\n    this.actionElements = element.querySelectorAll('[data-action]')\n\n    this.updateCache(this.targetElements, 'data-target')\n    this.updateCache(this.actionElements, 'data-action')\n\n    this.create()\n\n    if (\n      this.context[this.dataAttr] &&\n      this.context[this.dataAttr]['init'] &&\n      typeof this.context[this.dataAttr]['init'] === 'function' &&\n      !this.initCalled\n    ) {\n      this.context[this.dataAttr]['init'](this.cache['data-target'])\n      this.initCalled = true\n    }\n  }\n\n  updateCache(elements: NodeList, attr: string) {\n    elements.forEach((element: Element) => {\n      this.cache = {\n        ...this.cache,\n        [attr]: { ...this.cache[attr], [element.getAttribute(attr)]: element },\n      }\n    })\n  }\n\n  create() {\n    this.actionElements.forEach((actionElement: Element) => {\n      const actions = actionElement.getAttribute('data-action')\n\n      // Make sure the attribute has an action\n      if (!actions || actions === '') {\n        throw new Error(\n          '[Embroidery]: An action attribute was specified without an action. Is the action an empty string or missing?'\n        )\n      }\n\n      // Actions are separated by a blank space\n      // Example: mouseover->dothis mouseout->dothat\n      actions.split(' ').map((action) => {\n        let event = null\n        let func = null\n\n        // We can assume some common actions by their tagname\n        // For example button has the default action click\n        if (!action.includes('->')) {\n          const tagName = actionElement.tagName.toLowerCase()\n          event = defaultEventNames[tagName]\n          func = action\n        } else {\n          ;[event, func] = action.split('->')\n        }\n\n        if (!event) {\n          throw new Error(\n            `[Embroidery]: Missing event on ${actionElement}, for example click or change.`\n          )\n        }\n\n        if (!func) {\n          throw new Error(\n            `[Embroidery]: Missing function on ${actionElement}. Specify your function in the controller.`\n          )\n        }\n        actionElement.addEventListener(event, () => {\n          // Invoke function\n          this.context[this.dataAttr][func](this.cache['data-target'])\n        })\n      })\n    })\n  }\n}\n","export default class Partial {\n  private dataAttr: string\n  private element: Element\n\n  // TODO: implement auto-refresh (for polling etc)\n  constructor(element: Element) {\n    this.element = element\n    this.dataAttr = element.getAttribute('data-partial')\n\n    this.create()\n  }\n\n  async create() {\n    const result = await fetch(this.dataAttr, {\n      method: 'GET',\n      headers: { 'Content-Type': 'text/html' },\n    })\n\n    const html = await result.text()\n\n    this.element.insertAdjacentHTML('beforeend', html)\n  }\n}\n"],"names":["Data","DataAttribute","defaultEventNames","a","button","form","input","select","textarea","Controller","element","context","this","data-target","data-action","dataAttr","getAttribute","targetElements","querySelectorAll","actionElements","updateCache","create","initCalled","cache","elements","attr","forEach","_this","actionElement","actions","Error","split","map","action","event","func","includes","tagName","toLowerCase","addEventListener","_this2","Partial","fetch","method","headers","Content-Type","result","text","html","insertAdjacentHTML","Embroidery","start","app","Promise","resolve","document","readyState","console","info","discover","el","initialize","listenForNewUninitializedControllersAtRuntime","register","controller","callback","type","e","dataset","Object","keys","_this3","error","setTimeout","discoverUninitializedControllers","parentElement","Array","from","filter","_this4","_this4$cache$Data$Con","MutationObserver","mutations","addedNodes","length","node","nodeType","_node$parentElement","closest","_this5","observe","querySelector","childList","attributes","subtree"],"mappings":"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"}