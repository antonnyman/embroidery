{"version":3,"file":"embroidery.js","sources":["../lib/index.ts","../lib/utils.ts","../lib/controller.ts","../lib/partial.ts"],"sourcesContent":["import Controller from './controller'\nimport Partial from './partial'\nimport { domReady } from './utils'\n\nenum Data {\n  Controller = '[data-controller]',\n  Partial = '[data-partial]',\n}\n\nenum DataAttribute {\n  Controller = 'controller',\n  Partial = 'partial',\n}\n\ntype Callback = (el: Element) => void\n\ntype Cache = {\n  [DataAttribute.Controller]: Element[]\n  [DataAttribute.Partial]: Element[]\n}\n\nexport class Embroidery {\n  private cache: Cache = {\n    [DataAttribute.Controller]: [],\n    [DataAttribute.Partial]: [],\n  }\n\n  private context\n\n  static start() {\n    const app = new Embroidery()\n    app.start()\n    return app\n  }\n\n  async start() {\n    await domReady()\n    console.info('Embroidery started.')\n\n    this.discover((el: HTMLElement) => {\n      this.initialize(el)\n    }, Data.Controller)\n\n    this.discover((el: HTMLElement) => {\n      this.initialize(el)\n    }, Data.Partial)\n\n    this.listenForNewUninitializedControllersAtRuntime((el: HTMLElement) => {\n      this.initialize(el)\n    })\n  }\n\n  register(controller: Element) {\n    this.context = { ...this.context, ...controller }\n  }\n\n  discover(callback: Callback, type: Data) {\n    document\n      .querySelectorAll(type)\n      .forEach((controller: Element) => callback(controller))\n  }\n\n  updateCache(element, type) {\n    this.cache = { ...this.cache, [type]: [...this.cache[type], element] }\n  }\n\n  initialize(element: HTMLElement) {\n    if (element.dataset) {\n      Object.keys(element.dataset).forEach((el) => {\n        switch (el) {\n          case DataAttribute.Controller:\n            this.updateCache(element, DataAttribute.Controller)\n            return new Controller(element, this.context)\n\n          case DataAttribute.Partial:\n            this.updateCache(element, DataAttribute.Partial)\n            return new Partial(element)\n\n          default:\n            throw new Error(\n              'Element is not a specified data type, like controller or partial. Did you forget to register it?'\n            )\n        }\n      })\n    } else {\n      console.error(\n        `An element ${element} was picked up but could not be initialized`\n      )\n    }\n  }\n\n  discoverUninitializedControllers(\n    callback: Callback,\n    parentElement: Element = null\n  ) {\n    return Array.from(\n      (parentElement || document).querySelectorAll(Data.Controller)\n    )\n      .filter((element) => !this.cache[Data.Controller]?.includes(element))\n      .map((element) => callback(element))\n  }\n\n  listenForNewUninitializedControllersAtRuntime(callback: Callback) {\n    new MutationObserver((mutations) =>\n      mutations.map(({ addedNodes }) => {\n        if (addedNodes.length > 0) {\n          addedNodes.forEach((node) => {\n            // Ignore non-elements\n            if (node.nodeType !== 1) return\n            // Don't listen for changes that happen in discovered controllers\n            if (node.parentElement?.closest(Data.Controller)) return\n\n            this.discoverUninitializedControllers((el: Element) => {\n              callback(el)\n            }, node.parentElement)\n          })\n        }\n      })\n    ).observe(document.querySelector('body'), {\n      childList: true,\n      attributes: true,\n      subtree: true,\n    })\n  }\n}\n","// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\nexport function domReady() {\n  return new Promise((resolve) => {\n    if (document.readyState == 'loading') {\n      document.addEventListener('DOMContentLoaded', resolve)\n    } else {\n      resolve()\n    }\n  })\n}\n\nexport const defaultEventNames = {\n  a: 'click',\n  button: 'click',\n  form: 'submit',\n  input: 'input',\n  select: 'change',\n  textarea: 'input',\n}\n","import groupBy from 'lodash.groupby'\nimport { defaultEventNames } from './utils'\n\ntype Context = {\n  [key: string]: any\n}\n\nexport default class Controller {\n  private dataAttr: string\n  private targetElements: NodeList\n  private actionElements: NodeList\n  private targetsElements: NodeList\n  private actionsElements: NodeList\n\n  private cache = {\n    'data-target': {},\n    'data-action': {},\n    'data-targets': {},\n    'data-actions': {},\n  }\n\n  constructor(element: Element, private readonly context: Context) {\n    this.dataAttr = element.getAttribute('data-controller')\n    this.targetElements = element.querySelectorAll('[data-target]')\n    this.actionElements = element.querySelectorAll('[data-action]')\n\n    this.targetsElements = element.querySelectorAll('[data-targets]')\n    this.actionsElements = element.querySelectorAll('[data-actions]')\n\n    this.updateCache(this.targetElements, 'data-target')\n    this.updateCache(this.actionElements, 'data-action')\n    this.updateCache(this.targetsElements, 'data-targets')\n    this.updateCache(this.actionsElements, 'data-actions')\n\n    this.create()\n\n    if (typeof this.context[this.dataAttr]['init'] === 'function') {\n      this.context[this.dataAttr].init(this.cache['data-target'])\n    }\n  }\n\n  private getKey(el, element, attr) {\n    return el.length > 0\n      ? `${element.getAttribute(attr).slice(0, -2)}Targets`\n      : element.getAttribute(attr)\n  }\n\n  private updateCache(elements: NodeList, attr: string) {\n    let el = []\n    elements?.forEach((element: HTMLElement) => {\n      const target = element.getAttribute('data-target')\n\n      if (target?.endsWith('[]')) {\n        el = [...el, element]\n      }\n      this.cache = {\n        ...this.cache,\n        [attr]: {\n          ...this.cache[attr],\n          [this.getKey(el, element, attr)]: el.length > 0 ? el : element,\n        },\n      }\n    })\n  }\n\n  private create() {\n    this.actionElements.forEach((actionElement: Element) => {\n      const actions = actionElement.getAttribute('data-action')\n\n      // Make sure the attribute has an action\n      if (!actions) {\n        throw new Error(\n          '[Embroidery]: An action attribute was specified without an action. Is the action an empty string or missing?'\n        )\n      }\n\n      // Actions are separated by a blank space\n      // Example: mouseover->dothis mouseout->dothat\n      actions\n        .trim()\n        .split(/\\s+/)\n        .map((action) => {\n          let event = null\n          let func = null\n\n          // We can assume some common actions by their tagname\n          // For example button has the default action click\n          if (!action.includes('->')) {\n            const tagName = actionElement.tagName.toLowerCase()\n            event = defaultEventNames[tagName]\n            func = action\n          } else {\n            ;[event, func] = action.split('->')\n          }\n\n          if (!event) {\n            throw new Error(\n              `[Embroidery]: Missing event on ${actionElement}, for example click or change.`\n            )\n          }\n\n          if (!func) {\n            throw new Error(\n              `[Embroidery]: Missing function on ${actionElement}. Specify your function in the controller.`\n            )\n          }\n          actionElement.addEventListener(event, () => {\n            // Invoke function\n            this.context[this.dataAttr][func](this.cache['data-target'])\n          })\n        })\n    })\n  }\n}\n","export default class Partial {\n  private dataAttr: string\n  private element: Element\n\n  // TODO: implement auto-refresh (for polling etc)\n  constructor(element: Element) {\n    this.element = element\n    this.dataAttr = element.getAttribute('data-partial')\n\n    this.create()\n  }\n\n  async create() {\n    const result = await fetch(this.dataAttr, {\n      headers: { 'Content-Type': 'text/html' },\n    })\n\n    const html = await result.text()\n\n    this.element.insertAdjacentHTML('beforeend', html)\n  }\n}\n"],"names":["Data","DataAttribute","defaultEventNames","a","button","form","input","select","textarea","Controller","element","context","this","data-target","data-action","data-targets","data-actions","dataAttr","getAttribute","targetElements","querySelectorAll","actionElements","targetsElements","actionsElements","updateCache","create","init","cache","getKey","el","attr","length","slice","elements","forEach","target","endsWith","_this","actionElement","actions","Error","trim","split","map","action","event","func","includes","tagName","toLowerCase","addEventListener","_this2","Partial","fetch","headers","Content-Type","result","text","html","insertAdjacentHTML","Embroidery","start","app","Promise","resolve","document","readyState","console","info","discover","initialize","listenForNewUninitializedControllersAtRuntime","register","controller","callback","type","dataset","Object","keys","_this3","error","discoverUninitializedControllers","parentElement","Array","from","filter","_this4","_this4$cache$Data$Con","MutationObserver","mutations","addedNodes","node","nodeType","_node$parentElement","closest","_this5","observe","querySelector","childList","attributes","subtree"],"mappings":"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"}